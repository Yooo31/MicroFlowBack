name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - "feat/*"
      - "fix/*"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Notify Telegram on Test Failure
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="❌ Tests failed in pipeline for branch ${{ github.ref_name }}. Please check the logs."

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref_name == 'main' || startsWith(github.ref_name, 'demo/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t mircroflow:${{ github.sha }} .
          # Condition pour taguer en fonction de la branche
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            docker tag mircroflow:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/mircroflow:latest
            docker push ${{ secrets.DOCKER_USERNAME }}/mircroflow:latest
          elif [[ "${GITHUB_REF}" == refs/heads/demo/* ]]; then
            docker tag mircroflow:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/mircroflow:demo
            docker push ${{ secrets.DOCKER_USERNAME }}/mircroflow:demo
          fi

      - name: Notify Telegram on Build Success
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="✅ Docker image built and pushed for branch ${{ github.ref_name }}."

      - name: Notify Telegram on Build Failure
        if: failure()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="❌ Docker build or push failed for branch ${{ github.ref_name }}. Please check the logs."
